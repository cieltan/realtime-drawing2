#!/usr/bin/env node

// Module dependencies;
const app = require("../app").app;
const http = require("http");
const { normalizePort, onListening } = require("./config");

// Get port from environment and store in Express;
const port = process.env.PORT || "5000"
app.set("port", port);

// Import HTTP server;
const server = http.createServer(app)

// Event listener for HTTP server "error" event;
const onError = error => {
  if (error.syscall !== "listen") throw error;

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (
    error.code // Handle specific listen errors with friendly messages;
  ) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
};

// Listen on provided port, on all network interfaces with event listeners and event handlers;
server.listen(port);
// Instantiate a socket instance based on server obj
var io = require("socket.io").listen(server);
// run all socket logic
var socketLogic = require("../sockets/index")(io);

console.log(`server now listening on port: ${port}`);
server.on("error", onError);
server.on("listening", onListening(server));
