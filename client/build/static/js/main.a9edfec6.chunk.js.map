{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","utilities/setAuthToken.js","actions/authActions.js","components/auth/RegisterView.js","components/auth/RegisterContainer.js","components/auth/LoginView.js","components/auth/LoginContainer.js","components/dashboard/DashboardContainer.js","components/auth/PrivateRoute.js","components/drawing/Timer.js","socket.js","components/drawing/Scroll.js","components/drawing/TextInput.js","components/layout/GameOver.js","components/drawing/CanvasContainer.js","components/drawing/GameView.js","components/layout/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","type","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","RegisterView","props","useState","email","username","password","confirmPassword","setState","history","useHistory","handleChange","event","target","id","value","classes","makeStyles","theme","textField","width","button","useStyles","onSubmit","preventDefault","registerUser","autoComplete","TextField","error","helperText","onChange","className","label","variant","registerUsername","userFound","registerPassword","Button","color","to","RegisterContainer","this","push","prevProps","prevState","Component","connect","userData","post","then","res","catch","err","response","data","LoginView","loginUser","userNotFound","credentials","LoginContainer","setItem","jwt_decode","DashboardContainer","onClick","component","rest","render","Timer","seconds","socket","io","location","origin","on","console","log","root","maxWidth","backgroundColor","palette","background","paper","position","overflow","height","maxHeight","listSection","ul","padding","PinnedSubheaderList","List","words","map","item","ListItem","ListItemText","primary","Alert","elevation","marsginTop","spacing","BasicTextFields","React","currWord","setCurrWord","handleClose","reason","e","addWord","emit","size","align-items","disabled","correct","turn","score","Snackbar","open","autoHideDuration","onClose","severity","marginLeft","inline","display","userCard","avatar","alignItems","ListItemAvatar","Avatar","secondary","Fragment","GameOver","users","sort","a","b","clasName","slice","makeScoreList","determineUserDisplay","divStyle","CanvasContainer","isPainting","line","prevPos","offsetX","offsetY","getColor","userStrokeStyle","changeColor","getThickness","lineWidth","changeThickness","refs","canvas","getContext","onMouseDown","nativeEvent","drawing","paint","onMouseMove","offSetData","positionData","start","stop","concat","currPos","strokeStyle","ctx","undefined","x","y","beginPath","moveTo","lineTo","stroke","endPaintEvent","startDrawing","determineGameDisplay","titleDisplay","determineDisplay","userDisplay","gameOver","rounds","FormControl","InputLabel","NativeSelect","defaultValue","style","marginRight","onMouseLeave","onMouseUp","ref","TextInput","elem","startOfTurn","lineJoin","lineCap","getItem","moves","point","clearRect","time","gameDisplay","GameView","flexGrow","menuButton","title","textAlign","NavBar","AppBar","Toolbar","IconButton","edge","aria-label","Typography","jwtToken","currentTime","Date","now","exp","href","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9edfec6.chunk.js","sourcesContent":["import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utilities/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/dashboard\")) // re-direct to login on successful register\n    .catch(err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    });\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n    axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n        // Save to localStorage\n        // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n};","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport isEmpty from \"is-empty\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst RegisterView = props => {\n  const [state, setState] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const history = useHistory();\n\n  const registerUser = event => {\n    event.preventDefault();\n    props.registerUser(state, history);\n  };\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.id]: event.target.value });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      width: \"50%\"\n    },\n    button: {\n      width: \"35%\"\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <form onSubmit={registerUser} autoComplete=\"off\">\n        <div>\n          <TextField\n            value={state.email}\n            error={!isEmpty(props.errors.email)}\n            helperText={props.errors.email}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.username}\n            error={\n              !isEmpty(props.errors.registerUsername) ||\n              !isEmpty(props.errors.userFound)\n            }\n            helperText={props.errors.registerUsername || props.errors.userFound}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.password}\n            error={!isEmpty(props.errors.registerPassword)}\n            helperText={props.errors.registerPassword}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.confirmPassword}\n            error={!isEmpty(props.errors.confirmPassword)}\n            helperText={props.errors.confirmPassword}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"confirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <Button\n            className={classes.button}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Register\n          </Button>\n        </div>\n        <br></br>\n        <div>\n          <Link to=\"/\">Want to login instead?</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterView;\n","import React, { Component } from \"react\";\nimport { registerUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegisterView from \"./RegisterView\";\n\nclass RegisterContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const { auth, history } = this.props;\n\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { auth, history } = this.props;\n\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <br></br>\n        <br></br>\n\n        <RegisterView\n          errors={this.props.errors}\n          registerUser={this.props.registerUser}\n        ></RegisterView>\n      </div>\n    );\n  }\n}\n\nRegisterContainer.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(RegisterContainer);\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport isEmpty from \"is-empty\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst LoginView = props => {\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const loginUser = event => {\n    event.preventDefault();\n    props.loginUser(state);\n  };\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.id]: event.target.value });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      width: \"50%\"\n    },\n    button: {\n      width: \"35%\"\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <form onSubmit={loginUser} autoComplete=\"off\">\n        <div>\n          <TextField\n            value={state.username}\n            error={\n              !isEmpty(props.errors.username) ||\n              !isEmpty(props.errors.userNotFound)\n            }\n            helperText={props.errors.username || props.errors.userNotFound}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <TextField\n            value={state.password}\n            error={\n              !isEmpty(props.errors.password) ||\n              !isEmpty(props.errors.credentials)\n            }\n            helperText={props.errors.password || props.errors.credentials}\n            onChange={handleChange}\n            className={classes.textField}\n            id=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n          />\n        </div>\n        <br></br>\n        <div>\n          <Button\n            className={classes.button}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Login\n          </Button>\n        </div>\n\n        <br></br>\n        <div>\n          <Link to=\"/register\">Need an account?</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginView;\n","import React, { Component } from \"react\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport LoginView from \"./LoginView\";\n\nclass LoginContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let { auth, history } = this.props;\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { auth, history } = this.props;\n\n    if (auth.isAuthenticated) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <br></br>\n        <br></br>\n\n        <LoginView\n          errors={this.props.errors}\n          loginUser={this.props.loginUser}\n        ></LoginView>\n      </div>\n    );\n  }\n}\n\nLoginContainer.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginUser })(LoginContainer);\n","import React, { Component } from \"react\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nclass DashboardContainer extends Component {\n  render() {\n    return (\n      <div>\n        <h1>You are logged in.</h1>\n        <Link to=\"/game\">\n          <Button variant=\"contained\" color=\"primary\">\n            Join Game\n          </Button>\n        </Link>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.props.logoutUser}\n        >\n          Logout\n        </Button>\n      </div>\n    );\n  }\n}\n\nDashboardContainer.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(DashboardContainer);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\n\nexport default class Timer extends Component {\n  state = {\n    seconds: 0\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      seconds: 0\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.setState({\n        seconds: this.props.seconds\n      });\n    }\n  }\n\n  render() {\n    const { seconds } = this.state;\n    return (\n      <div>\n        {seconds === 0 ? (\n          <h1>Time's Out!</h1>\n        ) : (\n          <h1>\n            Time Remaining: {seconds < 10 ? `0${seconds}` : seconds} Seconds\n          </h1>\n        )}\n      </div>\n    );\n  }\n}\n","import io from 'socket.io-client'\n\nconst socket = io(window.location.origin)\n\nsocket.on('connect', () => {\n  console.log('Connected!')\n})\n\nexport default socket\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    height: 200,\n    maxHeight: 200\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  }\n}));\n\nexport default function PinnedSubheaderList(props) {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      {props.words.map(item => (\n        <ListItem>\n          <ListItemText primary={item} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Scroll from \"./Scroll.js\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marsginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst BasicTextFields = props => {\n  const classes = useStyles();\n\n  const [currWord, setCurrWord] = React.useState(\"\");\n\n  const handleClick = e => {\n    e.preventDefault();\n    props.addWord(currWord);\n    props.socket.emit(\"guessWord\", currWord);\n    setCurrWord(\"\");\n  };\n\n  const handleChange = e => {\n    setCurrWord(e.target.value);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1>Words You Have Guessed:</h1>\n      <div className=\"turn-title2\">\n        <Scroll words={props.words} />\n        <form onSubmit={handleClick}>\n          <TextField\n            id=\"currWord\"\n            label=\"Type Your Guess\"\n            variant=\"filled\"\n            type=\"text\"\n            onChange={handleChange}\n            value={currWord}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"submit\"\n            align-items=\"center\"\n            disabled={props.correct || props.turn}\n          >\n            Enter!\n          </Button>\n        </form>\n\n        <div>\n          <h1>{props.score === 0 ? \"\" : `Score: ${props.score}`}</h1>\n        </div>\n\n        <Snackbar\n          open={props.open}\n          autoHideDuration={1000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity=\"success\">\n            Your guess is correct!\n          </Alert>\n        </Snackbar>\n      </div>\n    </div>\n  );\n};\n\nexport default BasicTextFields;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport EjectIcon from \"@material-ui/icons/Eject\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    height: 750,\n    marginLeft: \"235%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nconst userCard = (user, avatar) => {\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <Avatar>{avatar}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={user.username}\n        secondary={<React.Fragment>{user.score}</React.Fragment>}\n      />\n    </ListItem>\n  );\n};\n\nconst makeScoreList = (classes, users) => {\n  return (\n    <div clasName=\"turn-title\">\n      <List className={classes.root}>\n        <Link to=\"/dashboard\">\n          <Button variant=\"contained\" color=\"primary\">\n            Dashboard\n          </Button>\n        </Link>\n        {userCard(users[0], <EjectIcon />)}\n        {users.slice(1).map(user => {\n          return userCard(user, user.username[0]);\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default function GameOver(props) {\n  const classes = useStyles();\n\n  const determineUserDisplay = classes => {\n    const users = props.users;\n    users.sort((a, b) => b.score - a.score);\n    return makeScoreList(classes, users);\n  };\n  return determineUserDisplay(classes);\n}\n","import React, { Component } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Timer from \"./Timer\";\nimport socket from '../../socket';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Button from \"@material-ui/core/Button\";\nimport TextInput from \"./TextInput.js\";\nimport GameOver from \"../layout/GameOver\";\n\nconst divStyle = {\n  display: \"flex\",\n  alignItems: \"center\"\n};\n\nclass CanvasContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userStrokeStyle: \"#FFFFFF\",\n      response: false,\n      turn: false,\n      seconds: 0,\n      startOfTurn: 0,\n      drawing: false,\n      currWord: \"\",\n      users: [],\n      correct: false,\n      open: false,\n      score: 0,\n      gameOver: false,\n      words: [],\n      rounds: 0\n    };\n  }\n\n  isPainting = false;\n\n  line = [];\n\n  prevPos = { offsetX: 0, offsetY: 0 };\n\n  prevPos = { offsetX: 0, offsetY: 0 };\n\n  componentDidMount() {\n    // Here we set up the properties of the canvas element.\n\n    let ctx = this.refs.canvas.getContext(\"2d\");\n\n    ctx.lineJoin = \"round\";\n    ctx.lineCap = \"round\";\n    ctx.lineWidth = 5;\n\n    socket.emit(\"token\", localStorage.getItem(\"jwtToken\"));\n\n    console.log(socket.id)\n\n    socket.on(\"initialize\", data => {\n      data.moves.map(point =>\n        this.paint(point.start, point.stop, point.userStrokeStyle)\n      );\n      console.log(data, 'data')\n      this.setState(\n        {\n          users: data.users\n        },\n        () => console.log(this.state.users)\n      );\n    });\n\n    socket.on(\"turn\", data => {\n      this.setState({ turn: true, currWord: data });\n\n      let canvas = this.refs.canvas;\n\n      if (canvas !== undefined) {\n        let ctx = canvas.getContext(\"2d\");\n        ctx.lineWidth = 5;\n      }\n    });\n\n    if (!this.state.turn) {\n      socket.on(\"newDrawingData\", data => {\n        this.paint(data.start, data.stop, data.userStrokeStyle, data.lineWidth);\n      });\n    }\n\n    socket.on(\"endTurn\", data => {\n      console.log(\"ended turn\");\n      this.setState({ turn: false, drawing: false });\n      socket.emit(\"changedTurn\");\n    });\n\n    socket.on(\"changedTurn\", data => {\n      console.log(\"changed turn\");\n      this.setState({\n        turn: false,\n        correct: false,\n        open: false,\n        words: [],\n        rounds: data\n      });\n\n      let canvas = this.refs.canvas;\n\n      if (canvas !== undefined) {\n        let ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n      }\n    });\n\n    socket.on(\"gameOver\", () => {\n      this.setState({\n        gameOver: true\n      });\n    });\n\n    socket.on(\"guessWord\", data => {\n      this.setState({\n        correct: true,\n        open: true,\n        score: data\n      });\n    });\n\n    socket.on(\"updateUsers\", data => {\n      this.setState({\n        users: data\n      });\n    });\n\n    socket.on(\"updateTime\", data => {\n      this.setState({\n        seconds: data.time,\n        rounds: data.rounds\n      });\n    });\n  }\n\n  getColor = () => {\n    return this.state.userStrokeStyle;\n  };\n\n  changeColor = e => {\n    //on change requires an event parameter in order to collect the change in value for the color\n    this.setState({\n      userStrokeStyle: e.target.value //saying set key color to point to the targets value which is the selected option\n    });\n  };\n\n  getThickness = () => {\n    return this.state.lineWidth;\n  };\n\n  changeThickness = e => {\n    //on change requires an event parameter in order to collect the change in value for the color\n    let ctx = this.refs.canvas.getContext(\"2d\");\n\n    ctx.lineWidth = e.target.value;\n  };\n\n  onMouseDown = ({ nativeEvent }) => {\n    if (this.state.turn && this.state.drawing) {\n      const { offsetX, offsetY } = nativeEvent;\n      this.isPainting = true;\n      this.prevPos = { offsetX, offsetY };\n      this.paint(this.prevPos, this.prevPos, this.state.userStrokeStyle);\n    }\n  };\n\n  onMouseMove = ({ nativeEvent }) => {\n    if (this.isPainting && this.state.turn && this.state.drawing) {\n      const { offsetX, offsetY } = nativeEvent;\n      const offSetData = { offsetX, offsetY };\n      // Set the start and stop position of the paint event.\n      const positionData = {\n        start: { ...this.prevPos },\n        stop: { ...offSetData }\n      };\n\n      // give socket new drawn data\n      socket.emit(\"newPositionData\", {\n        ...positionData,\n        userStrokeStyle: this.state.userStrokeStyle,\n        lineWidth: this.refs.canvas.getContext(\"2d\").lineWidth\n      });\n      // Add the position to the line array\n      this.line = this.line.concat(positionData);\n      this.paint(this.prevPos, offSetData, this.state.userStrokeStyle);\n    }\n  };\n\n  paint = (prevPos, currPos, strokeStyle, lineWidth) => {\n    let ctx = this.refs.canvas.getContext(\"2d\");\n    ctx.lineWidth = lineWidth === undefined ? ctx.lineWidth : lineWidth;\n\n    const { offsetX, offsetY } = currPos;\n    const { offsetX: x, offsetY: y } = prevPos;\n\n    ctx.beginPath();\n    ctx.strokeStyle = strokeStyle;\n    // Move the the prevPosition of the mouse\n    ctx.moveTo(x, y);\n    // Draw a line to the current position of the mouse\n    ctx.lineTo(offsetX, offsetY);\n    // Visualize the line using the strokeStyle\n    ctx.stroke();\n    this.prevPos = { offsetX, offsetY };\n  };\n\n  endPaintEvent = () => {\n    if (this.isPainting) {\n      this.isPainting = false;\n    }\n  };\n\n  startDrawing = () => {\n    if (this.state.turn && this.state.seconds <= 0) {\n      socket.emit(\"startDrawing\");\n      this.setState({ drawing: true });\n    }\n  };\n\n  addWord = currWord => {\n    this.setState({\n      words: [...this.state.words, currWord]\n    });\n  };\n\n  determineGameDisplay = () => {\n    let titleDisplay = this.determineDisplay();\n    let userDisplay = this.determineUserDisplay();\n\n    if (this.state.gameOver) {\n      return <GameOver users={this.state.users}></GameOver>;\n    } else {\n      return (\n        <div>\n          <h1>Round: {this.state.rounds + 1}</h1>\n          {titleDisplay}\n          {userDisplay}\n          <Timer seconds={this.state.seconds} />\n          <div className=\"buttonalignment\">\n            <div className=\"search\">\n              <FormControl>\n                <InputLabel>Colors</InputLabel>\n                <NativeSelect onChange={this.changeColor} defaultValue=\"gray\">\n                  <option value=\"white\">White</option>\n                  <option value=\"gray\">Gray</option>\n                  <option value=\"black\">Black</option>\n                  <option value=\"blue\">Blue</option>\n                  <option value=\"purple\">Purple</option>\n                  <option value=\"green\">Green</option>\n                  <option value=\"yellow\">Yellow</option>\n                  <option value=\"orange\">Orange</option>\n                  <option value=\"pink\">Pink</option>\n                </NativeSelect>\n              </FormControl>\n            </div>\n            <div className=\"search\">\n              <FormControl>\n                <InputLabel>Pen Size</InputLabel>\n                <NativeSelect onChange={this.changeThickness} defaultValue={5}>\n                  <option value={2}>Thin</option>\n                  <option value={5}>Medium</option>\n                  <option value={15}>Thick</option>\n                </NativeSelect>\n              </FormControl>\n            </div>\n          </div>\n          <div>\n            <Button\n              onClick={this.startDrawing}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!this.state.turn}\n            >\n              Start Drawing\n            </Button>\n          </div>\n          <br></br>\n          <div style={divStyle}>\n            <canvas\n              style={{\n                background: \"gray\",\n                marginRight: \"3%\"\n              }}\n              onMouseDown={this.onMouseDown}\n              onMouseLeave={this.endPaintEvent}\n              onMouseUp={this.endPaintEvent}\n              onMouseMove={this.onMouseMove}\n              ref=\"canvas\"\n              width={1150}\n              height={600}\n            />\n            <TextInput\n              correct={this.state.correct}\n              open={this.state.open}\n              score={this.state.score}\n              turn={this.state.turn}\n              socket={this.socket}\n              words={this.state.words}\n              addWord={this.addWord}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  determineDisplay = () => {\n    if (this.state.turn) {\n      return (\n        <div>\n          <h1>It's your turn.</h1>\n          <h1>Your word is: {this.state.currWord}</h1>\n        </div>\n      );\n    } else {\n      return <div>Wait for your turn...</div>;\n    }\n  };\n\n  determineUserDisplay = () => {\n    return this.state.users.map(elem => {\n      return (\n        <p>\n          {elem.username}: {elem.score}\n        </p>\n      );\n    });\n  };\n\n  render() {\n    let gameDisplay = this.determineGameDisplay();\n\n    return <div>{gameDisplay}</div>;\n  }\n}\n\nexport default CanvasContainer;\n","import React, { Component } from \"react\";\nimport CanvasContainer from \"./CanvasContainer.js\";\n\n\nclass GameView extends Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"gamealign\"></div>\n        <div className=\"alignment\">\n          <div className=\"paper\">\n            <CanvasContainer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameView;\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SchoolIcon from '@material-ui/icons/School';\nimport HomeIcon from '@material-ui/icons/Home';\n// import {Link} from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      textAlign: \"center\",\n    },\n  }));\n  \n  export default function NavBar() {\n    const classes = useStyles();\n  \n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} aria-label=\"menu\">\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Draw This!\n            </Typography>\n            {/* <Button color=\"inherit\">Login</Button> */}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n\n// const useStyles = makeStyles(theme => ({\n//   grow: {\n//     flexGrow: 1,\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2),\n//   },\n//   title: {\n//     display: 'none',\n//     [theme.breakpoints.up('sm')]: {\n//       display: 'block',\n//       backgroundColor: \"pink\",\n//     },\n//   },\n// }));\n\n// function Navbar() {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.grow}>\n//       <AppBar position=\"static\" color = \"pink\">\n//         <Toolbar>\n//           <Typography className={classes.title} variant=\"h6\" noWrap>\n//             Draw this!\n//           </Typography>\n//           {/* <IconButton> \n//             <Link to=\"/campuses\">       \n//               <SchoolIcon style={{fill: \"white\"}}/>\n//             </Link>\n//           </IconButton> */}\n//         </Toolbar>\n//       </AppBar>\n//     </div>\n//   );\n// }\n\n// export default Navbar;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utilities/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport RegisterContainer from \"./components/auth/RegisterContainer\";\nimport LoginContainer from \"./components/auth/LoginContainer\";\nimport DashboardContainer from \"./components/dashboard/DashboardContainer\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport GameView from \"./components/drawing/GameView\";\nimport Timer from \"./components/drawing/Timer\";\nimport NavBar from \"./components/layout/NavBar\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <NavBar></NavBar>\n\n            <Switch>\n              <Route exact path=\"/\" component={LoginContainer} />\n              <Route exact path=\"/register\" component={RegisterContainer} />\n\n              <PrivateRoute\n                exact\n                path=\"/dashboard\"\n                component={DashboardContainer}\n              />\n              <PrivateRoute exact path=\"/game\" component={GameView} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './socket';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}